{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Headers.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","productTopRated","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xL","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b8a1e98e.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_REGISTER_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,  \r\n    productCreateReducer, \r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer, \r\n} from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n         cartItems: cartItemsFromStorage,\r\n         shippingAddress: shippingAddressFromStorage,\r\n        },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    \r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state ={products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return{loading:true, products:[]}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return{loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return{loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:    \r\n            return{loading:false, product: action.payload}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return{loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n            \r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        \r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n            \r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-dark'\r\n                className='p-2'\r\n            >\r\n                RECHERCHER\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"info\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >SHOPONLINE_BF</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Panier</Nav.Link>\r\n                            </LinkContainer>\r\n                            \r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Se déconnecter</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                                \r\n                            ): (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Connection</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Produits</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Commande</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; SHOPONLINE_226</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            \r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} Avis`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    FCFA:{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width:'100px',\r\n                margin:'auto',\r\n                display:'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'> Chargement...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n            \r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n    \r\n\r\n } from '../constants/productConstants'\r\n\r\n\r\n export const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (FCFA:{product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport  Product from '../components/Product'\r\nimport  Loader from '../components/Loader'\r\nimport  Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Tous nos produits</h1>\r\n            {loading ? <Loader />\r\n                :error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xL={3}>\r\n                                <Product product={product}/>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n                    \r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n        \r\n    }, [dispatch, match, successProductReview])\r\n\r\n    \r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>RETOUR</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant= 'danger'>{error}</Message>\r\n                    :(\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                                <Rating value={product.rating} text={`${product.numReviews} avis`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Prix: FCFA:{product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Prix:</Col>\r\n                                                    <Col>\r\n                                                        <strong>FCFA:{product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'STOCK' : 'INDISPONIBLE'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Quantité</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className = 'btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'>\r\n                                                    AJOUTER\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Commentaires</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>Pas de commentaires</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Donner une note</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Notation</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Insuffisant</option>\r\n                                                            <option value='2'>2 - Passable</option>\r\n                                                            <option value='3'>3 - Bien</option>\r\n                                                            <option value='4'>4 - Très bien</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Commentaires</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n\r\n\r\n                                        \r\n  \r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    \r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart} from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    \r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }   \r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Panier</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Votre panier est vide <Link to='/'>Retour</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            FCFA:{item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                          \r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n                                        \r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Sous-total ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) Articles</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Procéder au paiement\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>S'identifier</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Adresse mail</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Entrer votre mail'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Mot de passe</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Entrer votre mot de passe'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    S'identifier\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Nouveau client? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        S'inscrire\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Les mots de passe ne correspondent pas')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>S'identifier</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Nom</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Entrer votre nom'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Adresse mail</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Entrer votre mail'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Mot de passe</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Entrer votre mot de passe'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirmation du mot de passe</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirmer le mot de passe'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    S'inscrire\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Avez vous un compte? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        S'identifier\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Profil de l'utilisateur</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Nom</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Entrer email'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Adresse mail</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Entrer mail'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Mot de passe</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirmer mot de passe</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm mot de passe'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Mettre à jour\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>Mes commandes</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Payée</th>\r\n                                <th>Delivrée</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>FCFA:{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n                                \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Connexion</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Connexion</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Livraison</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Livraison</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Paiement</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Paiement</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Passer la commande</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Passer la commande</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Livraison</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Adresse</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Entrer votre adresse'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Ville</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='ville de résidence'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Code Postal</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='entrer le code postal'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Pays</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Pays de résidence'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continuer\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Selectionner la méthode</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Paypal ou Carte de crédit'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continuer\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Livraison</h2>\r\n\r\n                            <p>\r\n                                <strong>Livraison: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Méthode de paiement</h2>\r\n                            <p>\r\n                                <strong>Methode: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Les articles commandés</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Votre panier est vide\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X FCFA{item.price} = FCFA:{(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Récapitulatif de la commande</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Articles:</Col>\r\n                                    <Col>FCFA:{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Livraison:</Col>\r\n                                    <Col>FCFA:{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Taxe:</Col>\r\n                                    <Col>FCFA{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Totale:</Col>\r\n                                    <Col>FCFA:{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Passer la commande\r\n                                </Button>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVdUPSCqiWdjO1dlklLhy8oM4VevjidD42SfqVJFS-NqGOazyAENBIZM3TslnrMZbUwDlGd2FC2j-iHt'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n\r\n    //AVdUPSCqiWdjO1dlklLhy8oM4VevjidD42SfqVJFS-NqGOazyAENBIZM3TslnrMZbUwDlGd2FC2j-iHt\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Commande: {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Livraison</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Livraison: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivrer le {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Non délivré</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Methode de paiement</h2>\r\n                                    <p>\r\n                                        <strong>Methode: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Payeé le {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Impayé</Message>\r\n                                        )}\r\n\r\n\r\n                                </ListGroup.Item>\r\n\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Articles commandés</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        commande est vide\r\n                                    </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X FCFA{item.price} = FCFA{(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Récapitulatif de la commande</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Articles:</Col>\r\n                                            <Col>FCFA:{order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Livraison:</Col>\r\n                                            <Col>FCFA:{order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Taxe:</Col>\r\n                                            <Col>FCFA:{order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>FCFA:{order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            MARQUE COMME DELIVREE\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                \r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Etes-vous sûre de vouloir supprimer cet utilisateur?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NOM</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                RETOUR\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Modifier utilisateur</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Entrer le nom'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Entrer email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Mettre à jour\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Etes-vous sûre de vouloir supprimer cet produit?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    \r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Prodruits</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Créer produit\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NOM</th>\r\n                                        <th>PRIX</th>\r\n                                        <th>CATEGORIE</th>\r\n                                        <th>MARQUE</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                            <tr key={product._id}>\r\n                                                <td>{product._id}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>${product.price}</td>\r\n                                                <td>{product.category}</td>\r\n                                                <td>{product.brand}</td>\r\n\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                        <Button variant='light' className='btn-sm'>\r\n                                                            <i className='fas fa-edit'></i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n    \r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                RETOUR\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Modifier le produit</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Entrer le nom'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Prix</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Entrer le prix'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Entrer image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n                                \r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Marque</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Entrer la marque'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Entrer stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Categorie</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Entrer la category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Entrer la description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Mettre à jour\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>COMMANDES</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>UTILISATEUR</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAYEE</th>\r\n                                    <th>DELIVREE</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>FCFA:{order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Headers'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-5\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n\n          \n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer/>\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}